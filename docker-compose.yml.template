version: '3'

services:
    grafana:
        image: grafana/grafana
        container_name: grafana
        hostname: grafana
        environment:
            - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
            - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
            - GF_USERS_ALLOW_SIGN_UP=false
        restart: always
        ports:
            - "3000:3000"
        networks:
            - monitor
        depends_on:
            - prometheus

    prometheus:
        image: prom/prometheus
        container_name: prometheus
        hostname: prometheus
        restart: always
        volumes:
            - ./prometheus:/etc/prometheus
            - ./opt/data/prometheus:/prometheus
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
            - '--storage.tsdb.path=/prometheus'
            - '--storage.tsdb.retention.time=200h'
            - '--web.enable-lifecycle'

        expose:
            - 9090
        # ports:
        #     - "9090:9090"
        networks:
            monitor:
                aliases:
                    - prometheus
        depends_on:
            - node-exporter
            - cadvisor

    # alertmanager:
    #     image: prom/alertmanager
    #     container_name: alertmanager
    #     hostname: alertmanager
    #     restart: always
    #     volumes:
    #         - ./alertmanager:/etc/alertmanager
    #         - ./opt/data/alertmanager:/alertmanager
    #     command:
    #         - '--config.file=/etc/alertmanager/alertmanager.yml'
    #         - '--storage.path=/alertmanager'
    #     expose:
    #         - 9093
    #     # ports:
    #     #     - "9093:9093"
    #     networks:
    #         monitor:
    #             aliases:
    #                 - alertmanager

    node-exporter:
        image: quay.io/prometheus/node-exporter
        container_name: node-exporter
        hostname: node-exporter
        restart: always
        expose:
            - 9100
        # ports:
        #     - "9100:9100"
        networks:
            monitor:
                aliases:
                    - node-exporter

    cadvisor:
        image: gcr.io/cadvisor/cadvisor
        container_name: cadvisor
        hostname: cadvisor
        privileged: true
        restart: always
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:rw
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
            - /dev/disk/:/dev/disk:ro
        expose:
            - 8080
        # ports:
        #     - "8080:8080"
        networks:
            monitor:
                aliases:
                    - cadvisor

networks:
    monitor:
        external: false
